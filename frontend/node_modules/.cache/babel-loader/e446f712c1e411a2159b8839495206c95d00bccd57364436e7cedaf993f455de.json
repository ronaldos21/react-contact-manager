{"ast":null,"code":"var _jsxFileName = \"/Users/ronaldosimbana/Desktop/contact-app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport SearchBar from \"./components/SearchBar\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [tagFilter, setTagFilter] = useState('');\n  const fetchContacts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/contacts\");\n      const data = await response.json();\n      setContacts(data);\n    } catch (error) {\n      console.error(\"Error fetching contacts:\", error);\n    }\n  };\n  const deleteContact = async id => {\n    try {\n      await fetch(`http://localhost:3001/contacts/${id}`, {\n        method: 'DELETE'\n      });\n      fetchContacts();\n    } catch (err) {\n      console.error('Error deleting contact:', err);\n    }\n  };\n  const updateContact = async (id, updatedData) => {\n    try {\n      await fetch(`http://localhost:3001/contacts/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedData)\n      });\n      fetchContacts();\n    } catch (err) {\n      console.error('Error updating contact:', err);\n    }\n  };\n\n  // Gather all unique tags for filtering\n  const allTags = Array.from(new Set(contacts.flatMap(c => c.tags ? c.tags.split(',').map(tag => tag.trim()) : []).filter(Boolean)));\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n\n  // Filter contacts by search and tag\n  const filteredContacts = contacts.filter(c => c.name.toLowerCase().includes(search.toLowerCase()) || c.email.toLowerCase().includes(search.toLowerCase()) || c.phone.includes(search)).filter(c => !tagFilter || c.tags && c.tags.split(',').map(tag => tag.trim()).includes(tagFilter));\n  return (\n    /*#__PURE__*/\n    // Outermost div applies subtle background and always fills screen height\n    _jsxDEV(\"div\", {\n      className: \"bg-gray-50 min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 sm:p-8 max-w-2xl w-full max-w-full mx-auto rounded-2xl shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-blue-600 mb-4 flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"contacts\",\n            children: \"\\uD83D\\uDCC7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), \" Contact Manager\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n          onAdd: fetchContacts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n          search: search,\n          setSearch: setSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 flex flex-wrap items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"tagFilter\",\n            className: \"font-semibold\",\n            children: \"Filter by Tag:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"tagFilter\",\n            className: \"border p-2 rounded\",\n            value: tagFilter,\n            onChange: e => setTagFilter(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 13\n            }, this), allTags.map(tag => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: tag,\n              children: tag\n            }, tag, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n          contacts: filteredContacts,\n          onDelete: deleteContact,\n          onUpdate: updateContact,\n          search: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"aJz+AplOe19VklRmz5MzHFRUXzo=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ContactForm","ContactList","SearchBar","ToastContainer","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","search","setSearch","tagFilter","setTagFilter","fetchContacts","response","fetch","data","json","error","console","deleteContact","id","method","err","updateContact","updatedData","headers","body","JSON","stringify","allTags","Array","from","Set","flatMap","c","tags","split","map","tag","trim","filter","Boolean","filteredContacts","name","toLowerCase","includes","email","phone","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","htmlFor","value","onChange","e","target","onDelete","onUpdate","_c","$RefreshReg$"],"sources":["/Users/ronaldosimbana/Desktop/contact-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport SearchBar from \"./components/SearchBar\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [tagFilter, setTagFilter] = useState('');\n\n  const fetchContacts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/contacts\");\n      const data = await response.json();\n      setContacts(data);\n    } catch (error) {\n      console.error(\"Error fetching contacts:\", error);\n    }\n  };\n\n  const deleteContact = async (id) => {\n    try {\n      await fetch(`http://localhost:3001/contacts/${id}`, {\n        method: 'DELETE'\n      });\n      fetchContacts();\n    } catch (err) {\n      console.error('Error deleting contact:', err);\n    }\n  };\n\n  const updateContact = async (id, updatedData) => {\n    try {\n      await fetch(`http://localhost:3001/contacts/${id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(updatedData)\n      });\n      fetchContacts();\n    } catch (err) {\n      console.error('Error updating contact:', err);\n    }\n  };\n\n  // Gather all unique tags for filtering\n  const allTags = Array.from(\n    new Set(\n      contacts\n        .flatMap(c => (c.tags ? c.tags.split(',').map(tag => tag.trim()) : []))\n        .filter(Boolean)\n    )\n  );\n\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n\n  // Filter contacts by search and tag\n  const filteredContacts = contacts\n    .filter(\n      c =>\n        c.name.toLowerCase().includes(search.toLowerCase()) ||\n        c.email.toLowerCase().includes(search.toLowerCase()) ||\n        c.phone.includes(search)\n    )\n    .filter(\n      c =>\n        !tagFilter ||\n        (c.tags && c.tags.split(',').map(tag => tag.trim()).includes(tagFilter))\n    );\n\n  return (\n    // Outermost div applies subtle background and always fills screen height\n    <div className=\"bg-gray-50 min-h-screen\">\n      <div className=\"p-4 sm:p-8 max-w-2xl w-full max-w-full mx-auto rounded-2xl shadow\">\n        <h1 className=\"text-3xl font-bold text-blue-600 mb-4 flex items-center gap-2\">\n          <span role=\"img\" aria-label=\"contacts\">ğŸ“‡</span> Contact Manager\n        </h1>\n        <ToastContainer />\n        <ContactForm onAdd={fetchContacts} />\n        <SearchBar search={search} setSearch={setSearch} />\n        <div className=\"mb-4 flex flex-wrap items-center gap-2\">\n          <label htmlFor=\"tagFilter\" className=\"font-semibold\">Filter by Tag:</label>\n          <select\n            id=\"tagFilter\"\n            className=\"border p-2 rounded\"\n            value={tagFilter}\n            onChange={e => setTagFilter(e.target.value)}\n          >\n            <option value=\"\">All</option>\n            {allTags.map(tag => (\n              <option key={tag} value={tag}>{tag}</option>\n            ))}\n          </select>\n        </div>\n        <ContactList\n          contacts={filteredContacts}\n          onDelete={deleteContact}\n          onUpdate={updateContact}\n          search={search}\n        />\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}