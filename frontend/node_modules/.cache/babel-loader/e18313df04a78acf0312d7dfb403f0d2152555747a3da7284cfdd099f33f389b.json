{"ast":null,"code":"var _jsxFileName = \"/Users/ronaldosimbana/Desktop/contact-app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport SearchBar from \"./components/SearchBar\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [tagFilter, setTagFilter] = useState('');\n  const fetchContacts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/contacts\");\n      const data = await response.json();\n      setContacts(data);\n    } catch (error) {\n      console.error(\"Error fetching contacts:\", error);\n    }\n  };\n  const deleteContact = async id => {\n    try {\n      await fetch(`http://localhost:3001/contacts/${id}`, {\n        method: 'DELETE'\n      });\n      fetchContacts(); // Refresh the list\n    } catch (err) {\n      console.error('Error deleting contact:', err);\n    }\n  };\n  const updateContact = async (id, updatedData) => {\n    try {\n      await fetch(`http://localhost:3001/contacts/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedData)\n      });\n      fetchContacts(); // refresh list\n    } catch (err) {\n      console.error('Error updating contact:', err);\n    }\n  };\n\n  //Collect all unique tags from contact(no duplicates)\n  const allTags = Array.from(new Set(contacts.flatMap(c => c.tags ? c.tags.split(',').map(tag => tag.trim()) : []).filter(Boolean)));\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8 max-w-xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-blue-600 mb-4\",\n      children: \"\\uD83D\\uDCC7 Contact Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n      onAdd: fetchContacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      search: search,\n      setSearch: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: contacts.filter(c => c.name.toLowerCase().includes(search.toLowerCase()) || c.email.toLowerCase().includes(search.toLowerCase()) || c.phone.includes(search)),\n      onDelete: deleteContact,\n      onUpdate: updateContact,\n      search: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aJz+AplOe19VklRmz5MzHFRUXzo=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ContactForm","ContactList","SearchBar","ToastContainer","toast","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","search","setSearch","tagFilter","setTagFilter","fetchContacts","response","fetch","data","json","error","console","deleteContact","id","method","err","updateContact","updatedData","headers","body","JSON","stringify","allTags","Array","from","Set","flatMap","c","tags","split","map","tag","trim","filter","Boolean","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","name","toLowerCase","includes","email","phone","onDelete","onUpdate","_c","$RefreshReg$"],"sources":["/Users/ronaldosimbana/Desktop/contact-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport SearchBar from \"./components/SearchBar\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function App() {\n\n  const [contacts, setContacts] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [tagFilter, setTagFilter] = useState('');\n\n  const fetchContacts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/contacts\");\n      const data = await response.json();\n      setContacts(data);\n    } catch (error) {\n      console.error(\"Error fetching contacts:\", error);\n    }\n  };\n\n  const deleteContact = async (id) => {\n    try {\n      await fetch(`http://localhost:3001/contacts/${id}`, {\n        method: 'DELETE'\n      });\n      fetchContacts(); // Refresh the list\n    } catch (err) {\n      console.error('Error deleting contact:', err);\n    }\n  };\n\n  const updateContact = async (id, updatedData) => {\n    try {\n      await fetch(`http://localhost:3001/contacts/${id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(updatedData)\n      });\n      fetchContacts(); // refresh list\n    } catch (err) {\n      console.error('Error updating contact:', err);\n    }\n  };\n\n  //Collect all unique tags from contact(no duplicates)\n  const allTags = Array.from(\n    new Set(\n      contacts\n        .flatMap(c => (c.tags ? c.tags.split(',').map(tag => tag.trim()) : []))\n        .filter(Boolean)\n    )\n  );\n\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n\n\n\n\n  return (\n    <div className=\"p-8 max-w-xl mx-auto\">\n      <h1 className=\"text-3xl font-bold text-blue-600 mb-4\">ðŸ“‡ Contact Manager</h1>\n      <ToastContainer />\n      <ContactForm onAdd={fetchContacts} />\n      <SearchBar search={search} setSearch={setSearch} />\n      <ContactList\n        contacts={contacts.filter(c =>\n          c.name.toLowerCase().includes(search.toLowerCase()) ||\n          c.email.toLowerCase().includes(search.toLowerCase()) ||\n          c.phone.includes(search)\n        )}\n        onDelete={deleteContact}\n        onUpdate={updateContact}\n        search={search}\n      />\n\n    </div>\n  );\n\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}